apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "containerssh-config-server.fullname" . }}
  namespace: {{ .Values.config.namespace }}
  labels:
    app: containerssh-config-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: containerssh-config-server
  template:
    metadata:
      labels:
        app: containerssh-config-server
    spec:
      serviceAccountName: containerssh
      containers:
        - name: config-server
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 8000
          env:
            - name: NFS_ADDRESS
              value: "{{ .Values.env.nfsAddress }}"

            - name: NAMESPACE
              value: "{{ .Values.config.namespace }}"

          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
          volumeMounts:
            - name: nfs-kube-share
              mountPath: /home/tako8/share/kube_share
      volumes:
        - name: nfs-kube-share
          nfs:
            server: {{ .Values.nfs.server }}
            path: {{ .Values.nfs.path }}
            readOnly: false

